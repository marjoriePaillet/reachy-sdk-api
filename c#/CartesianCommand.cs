// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cartesian_command.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Reachy.Sdk.Kinematics {

  /// <summary>Holder for reflection information generated from cartesian_command.proto</summary>
  public static partial class CartesianCommandReflection {

    #region Descriptor
    /// <summary>File descriptor for cartesian_command.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CartesianCommandReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdjYXJ0ZXNpYW5fY29tbWFuZC5wcm90bxIVcmVhY2h5LnNkay5raW5lbWF0",
            "aWNzGhRhcm1fa2luZW1hdGljcy5wcm90bxoXb3JiaXRhX2tpbmVtYXRpY3Mu",
            "cHJvdG8iJgoTQ2FydGVzaWFuQ29tbWFuZEFjaxIPCgdzdWNjZXNzGAEgASgI",
            "IuMBChhGdWxsQm9keUNhcnRlc2lhbkNvbW1hbmQSRAoVbGVmdF9hcm1fZW5k",
            "X2VmZmVjdG9yGAEgASgLMiUucmVhY2h5LnNkay5raW5lbWF0aWNzLkFybUVu",
            "ZEVmZmVjdG9yEkUKFnJpZ2h0X2FybV9lbmRfZWZmZWN0b3IYAiABKAsyJS5y",
            "ZWFjaHkuc2RrLmtpbmVtYXRpY3MuQXJtRW5kRWZmZWN0b3ISOgoNb3JiaXRh",
            "X3RhcmdldBgDIAEoCzIjLnJlYWNoeS5zZGsua2luZW1hdGljcy5PcmJpdGFU",
            "YXJnZXQyiAIKF0NhcnRlc2lhbkNvbW1hbmRTZXJ2aWNlEnMKFFNlbmRDYXJ0",
            "ZXNpYW5Db21tYW5kEi8ucmVhY2h5LnNkay5raW5lbWF0aWNzLkZ1bGxCb2R5",
            "Q2FydGVzaWFuQ29tbWFuZBoqLnJlYWNoeS5zZGsua2luZW1hdGljcy5DYXJ0",
            "ZXNpYW5Db21tYW5kQWNrEngKF1N0cmVhbUNhcnRlc2lhbkNvbW1hbmRzEi8u",
            "cmVhY2h5LnNkay5raW5lbWF0aWNzLkZ1bGxCb2R5Q2FydGVzaWFuQ29tbWFu",
            "ZBoqLnJlYWNoeS5zZGsua2luZW1hdGljcy5DYXJ0ZXNpYW5Db21tYW5kQWNr",
            "KAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Reachy.Sdk.Kinematics.ArmKinematicsReflection.Descriptor, global::Reachy.Sdk.Kinematics.OrbitaKinematicsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.CartesianCommandAck), global::Reachy.Sdk.Kinematics.CartesianCommandAck.Parser, new[]{ "Success" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Reachy.Sdk.Kinematics.FullBodyCartesianCommand), global::Reachy.Sdk.Kinematics.FullBodyCartesianCommand.Parser, new[]{ "LeftArmEndEffector", "RightArmEndEffector", "OrbitaTarget" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CartesianCommandAck : pb::IMessage<CartesianCommandAck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CartesianCommandAck> _parser = new pb::MessageParser<CartesianCommandAck>(() => new CartesianCommandAck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CartesianCommandAck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.CartesianCommandReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartesianCommandAck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartesianCommandAck(CartesianCommandAck other) : this() {
      success_ = other.success_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CartesianCommandAck Clone() {
      return new CartesianCommandAck(this);
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 1;
    private bool success_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CartesianCommandAck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CartesianCommandAck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Success != other.Success) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Success != false) hash ^= Success.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Success != false) {
        output.WriteRawTag(8);
        output.WriteBool(Success);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Success != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CartesianCommandAck other) {
      if (other == null) {
        return;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Success = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FullBodyCartesianCommand : pb::IMessage<FullBodyCartesianCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FullBodyCartesianCommand> _parser = new pb::MessageParser<FullBodyCartesianCommand>(() => new FullBodyCartesianCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FullBodyCartesianCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Reachy.Sdk.Kinematics.CartesianCommandReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCartesianCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCartesianCommand(FullBodyCartesianCommand other) : this() {
      leftArmEndEffector_ = other.leftArmEndEffector_ != null ? other.leftArmEndEffector_.Clone() : null;
      rightArmEndEffector_ = other.rightArmEndEffector_ != null ? other.rightArmEndEffector_.Clone() : null;
      orbitaTarget_ = other.orbitaTarget_ != null ? other.orbitaTarget_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCartesianCommand Clone() {
      return new FullBodyCartesianCommand(this);
    }

    /// <summary>Field number for the "left_arm_end_effector" field.</summary>
    public const int LeftArmEndEffectorFieldNumber = 1;
    private global::Reachy.Sdk.Kinematics.ArmEndEffector leftArmEndEffector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmEndEffector LeftArmEndEffector {
      get { return leftArmEndEffector_; }
      set {
        leftArmEndEffector_ = value;
      }
    }

    /// <summary>Field number for the "right_arm_end_effector" field.</summary>
    public const int RightArmEndEffectorFieldNumber = 2;
    private global::Reachy.Sdk.Kinematics.ArmEndEffector rightArmEndEffector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.ArmEndEffector RightArmEndEffector {
      get { return rightArmEndEffector_; }
      set {
        rightArmEndEffector_ = value;
      }
    }

    /// <summary>Field number for the "orbita_target" field.</summary>
    public const int OrbitaTargetFieldNumber = 3;
    private global::Reachy.Sdk.Kinematics.OrbitaTarget orbitaTarget_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Reachy.Sdk.Kinematics.OrbitaTarget OrbitaTarget {
      get { return orbitaTarget_; }
      set {
        orbitaTarget_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FullBodyCartesianCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FullBodyCartesianCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LeftArmEndEffector, other.LeftArmEndEffector)) return false;
      if (!object.Equals(RightArmEndEffector, other.RightArmEndEffector)) return false;
      if (!object.Equals(OrbitaTarget, other.OrbitaTarget)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (leftArmEndEffector_ != null) hash ^= LeftArmEndEffector.GetHashCode();
      if (rightArmEndEffector_ != null) hash ^= RightArmEndEffector.GetHashCode();
      if (orbitaTarget_ != null) hash ^= OrbitaTarget.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (leftArmEndEffector_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LeftArmEndEffector);
      }
      if (rightArmEndEffector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RightArmEndEffector);
      }
      if (orbitaTarget_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OrbitaTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (leftArmEndEffector_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LeftArmEndEffector);
      }
      if (rightArmEndEffector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RightArmEndEffector);
      }
      if (orbitaTarget_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(OrbitaTarget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (leftArmEndEffector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeftArmEndEffector);
      }
      if (rightArmEndEffector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RightArmEndEffector);
      }
      if (orbitaTarget_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OrbitaTarget);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FullBodyCartesianCommand other) {
      if (other == null) {
        return;
      }
      if (other.leftArmEndEffector_ != null) {
        if (leftArmEndEffector_ == null) {
          LeftArmEndEffector = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
        }
        LeftArmEndEffector.MergeFrom(other.LeftArmEndEffector);
      }
      if (other.rightArmEndEffector_ != null) {
        if (rightArmEndEffector_ == null) {
          RightArmEndEffector = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
        }
        RightArmEndEffector.MergeFrom(other.RightArmEndEffector);
      }
      if (other.orbitaTarget_ != null) {
        if (orbitaTarget_ == null) {
          OrbitaTarget = new global::Reachy.Sdk.Kinematics.OrbitaTarget();
        }
        OrbitaTarget.MergeFrom(other.OrbitaTarget);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (leftArmEndEffector_ == null) {
              LeftArmEndEffector = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
            }
            input.ReadMessage(LeftArmEndEffector);
            break;
          }
          case 18: {
            if (rightArmEndEffector_ == null) {
              RightArmEndEffector = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
            }
            input.ReadMessage(RightArmEndEffector);
            break;
          }
          case 26: {
            if (orbitaTarget_ == null) {
              OrbitaTarget = new global::Reachy.Sdk.Kinematics.OrbitaTarget();
            }
            input.ReadMessage(OrbitaTarget);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (leftArmEndEffector_ == null) {
              LeftArmEndEffector = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
            }
            input.ReadMessage(LeftArmEndEffector);
            break;
          }
          case 18: {
            if (rightArmEndEffector_ == null) {
              RightArmEndEffector = new global::Reachy.Sdk.Kinematics.ArmEndEffector();
            }
            input.ReadMessage(RightArmEndEffector);
            break;
          }
          case 26: {
            if (orbitaTarget_ == null) {
              OrbitaTarget = new global::Reachy.Sdk.Kinematics.OrbitaTarget();
            }
            input.ReadMessage(OrbitaTarget);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
